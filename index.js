const { App } = require("@slack/bolt");
const askShiritoriAPI = require("./sendShiritoriWord");
require("dotenv").config();
const { translateToJapanese } = require("./translateToJapanese");
const { askEmojiDB } = require("./askEmojiDB");
const emoji = require("node-emoji");

// globa array to store the words
let usedWords = [];
let nextChar = null;

const app = new App({
    token: process.env.TOKEN,
    signingSecret: process.env.SIGNING_SECRET,
    socketMode: true,
    appToken: process.env.APP_TOKEN,
});

function isEmoji(word) {
    //check if the word is an emoji
    return word.match(/^:[a-z0-9_+-]+:$/);
}

app.command("/start", async ({ command, ack, say }) => {
    try {
        await ack();
        let txt = command.text; // The inputted parameters
        say("„ÇÑ„Å£„Åª„ÉºÔºÅ„Åó„Çä„Å®„ÇäÂ§ßÂ•Ω„ÅçSiri„Å®„É™„Çπüêø„Å†„ÇàÔºÅ");
        say(` Siri: „Äé„É´„Éº„É´„ÇíË™¨Êòé„Åó„Åæ„Åô„ÄÇ„Äè
- „Å≤„Çâ„Åå„Å™„ÄÅ„Ç´„Çø„Ç´„Éä„ÄÅÊº¢Â≠ó„ÄÅÁµµÊñáÂ≠ó„ÅßÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ
- ‰ΩøÁî®„Åó„ÅüÂçòË™û„ÅØ‰Ωø„Åà„Åæ„Åõ„Çì
- „Äå„Çì„Äç„ÅßÁµÇ„Çè„ÇãÂçòË™û„ÅØ‰Ωø„Åà„Åæ„Åõ„Çì
- „É™„Çπ„Çø„Éº„Éà„Åó„Åü„ÅÑÂ†¥Âêà„ÅØ„Äå/start„Äç„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ
`);
        usedWords = [];
        nextChar = null;
    } catch (error) {
        console.log("err");
        console.error(error);
    }
});

function isNN(word) {
    if (word.slice(-1) == "„Çì" || word.slice(-1) == "„É≥") {
        return true;
    }
    return false;
}

let risuMsg = [
    "„Åã„Çè„ÅÑÔΩû",
    "„ÅÑ„ÅÑ„Å≠ÔΩû",
    "„Åù„ÅÜ„Åç„Åü„ÅãÔºÅ",
    "Â§âÂåñÁêÉ„Å†„Å≠w",
    "„Åæ„Åò„Åãw",
    "„Å™„Çã„Åª„Å©ÔΩû",
];

async function normalize(data, say) {
    return new Promise(async (resolve, reject) => {
        let response = {
            type: "",
            word: data,
            isNN: false,
        };
        if (isEmoji(data)) {
            response.type = "emoji";
            tmp = data.replace(/:/g, "");
            response.word = await translateToJapanese(tmp);
            say(
                response.word +
                    " „ÅÆÁµµÊñáÂ≠ó„Åã„Å™Ôºü " +
                    risuMsg[Math.floor(Math.random() * risuMsg.length)]
            );
            resolve(response);
        } else {
            // Êó•Êú¨Ë™û„Åã„Å©„ÅÜ„Åã„Çí„ÉÅ„Çß„ÉÉ„ÇØ
            response.type = "text";
            if (data.match(/^[„ÅÅ-„Çì„Ç°-„É∂„Éº‰∏Ä-Èæ†]+$/)) {
                data = data.replace(/[\u3041-\u3096]/g, function (match) {
                    var chr = match.charCodeAt(0) + 0x60;
                    return String.fromCharCode(chr);
                });
                response.word = data;
                response.isNN = isNN(data);
                resolve(response);
            } else if (data.match(/^[„Ç°-„É∂„Éº]+$/)) {
                // „Ç´„Çø„Ç´„Éä„ÅÆ„Åæ„Åæ
                response.isNN = isNN(data);
                resolve(response);
            } else {
                let errMsg = [
                    "Êó•Êú¨Ë™û„ÅßÂÖ•Âäõ„Åó„Å¶„Å≠ÔºÅ„Ç¢„É´„Éï„Ç°„Éô„ÉÉ„Éà„ÇÑÊï∞Â≠ó„ÄÅË®òÂè∑„ÅØ‰Ωø„Åà„Å™„ÅÑ„ÇàÔºÅ",
                    "Siri:„Äé„Åô„Åø„Åæ„Åõ„Çì„ÄÇ„Ç¢„É´„Éï„Ç°„Éô„ÉÉ„Éà„ÇÑÊï∞Â≠ó„ÄÅË®òÂè∑„ÅØ‰Ωø„Åà„Åæ„Åõ„Çì„ÄÇ„Äè",
                ];
                say(errMsg[Math.floor(Math.random() * errMsg.length)]);
                reject(-1);
            }
        }
    });
}

// ÂÖ®„Å¶„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÂèó‰ø°„Åß„Åç„Çã„Çà„ÅÜ„Å´„Åô„Çã
app.message(async ({ message, say }) => {
    // console.log("message", message);
    // console.log("MSG received.", message.text);

    /*
    inputTypeAndWord = {
        type: "word" or "emoji",
        word: "ÊûóÊ™é", ":apple:"„Å™„Å©
    }
    */
    console.log("checking");
    let inputTypeAndWord = await normalize(message.text, say);
    if (inputTypeAndWord === -1) {
        return;
    }

    if (inputTypeAndWord.isNN) {
        say("„Çì„ÅßÁµÇ„Çè„Å£„Å°„ÇÉ„ÉÄ„É°„Å†„ÇàÔºÅ");
        return;
    }

    console.log("inputTypeAndWord", inputTypeAndWord);

    try {
        let result = await askShiritoriAPI(inputTypeAndWord.word);
        let emojiResult = -1;

        // --- ÂçòË™û„ÉÅ„Çß„ÉÉ„ÇØ --- //
        if (result.yourWord == "ÂõûÁ≠î„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ") {
            say("Siri:„Äé„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ„Äå„Çì„Äç„Çí‰Ωø„Å£„Å¶„Åæ„Åõ„Çì„ÅãÔºü„Äè");
            return;
        }

        if (inputTypeAndWord.type == "emoji") {
            console.log("---------------");
            let emojiResult = await askEmojiDB(
                inputTypeAndWord.word,
                result.yourWord
            );
            console.log("emojiResult", emojiResult);
            if (emojiResult != -1) {
                // replace space with underscore
                console.log(emojiResult, "hihifhi");
                let emojiName = emojiResult.englishName.replace(/ /g, "_");
                usedWords.push(emojiResult.japaneseName);
                // nextChar is last char of yomi
                console.log(emojiResult.yomi);
                nextChar = emojiResult.yomi.slice(-1);
                console.log(nextChar);
                say(
                    `${emoji.get(emojiName)} (${
                        emojiResult.japaneseName
                    }) -> Ê¨°„ÅØ „Äå${nextChar}„Äç !`
                );
                return;
            }
        }

        console.log(nextChar, result.yourWord[0], "validating");
        if (nextChar != null && result.yourWord[0] != nextChar) {
            say(
                "„Äå" +
                    result.yourWord +
                    "„Äç„ÅØ„Äå" +
                    nextChar +
                    "„Äç„ÅßÂßã„Åæ„ÇãÂçòË™û„Åò„ÇÉ„Å™„ÅÑ„ÇàÔºÅ"
            );
            return;
        }

        // „Çì„ÄÄ„ÅßÁµÇ„Çè„Å£„Å¶„ÅÑ„Åü„ÇâÁµÇ‰∫Ü
        if (
            inputTypeAndWord.word.slice(-1) === "„Çì" ||
            inputTypeAndWord.word.slice(-1) === "„É≥"
        ) {
            say("„Çì„ÅßÁµÇ„Çè„Å£„Å¶„Çã„Åò„ÇÉ„Çìüòµ!„ÇÇ„ÅÜ‰∏ÄÂõûÔºÅ");
            return;
        }
        // „Åô„Åß„Å´‰Ωø„Çè„Çå„Å¶„ÅÑ„Åü„Çâ ÊåáÊëò„Åô„Çã
        if (usedWords.includes(result.yourWord)) {
            say("„Åï„Å£„Åç‰Ωø„Çè„Å™„Åã„Å£„Åü„Å£„ÅëÔºü„Åæ„ÅÇ„ÅÑ„Å£„Åã");
        }

        // ÊúâÂäπ„Åß„ÅÇ„Çå„Å∞„ÄÅusedWords„Å´ËøΩÂä†

        usedWords.push(result.yourWord);
        usedWords.push(result.botWordYomi);
        nextChar = result.nextChar;

        console.log("usedWords", usedWords);
        console.log("nextChar", nextChar);

        say(
            result.botWord +
                "(" +
                result.botWordYomi +
                ")" +
                " -> Ê¨°„ÅØ„Äå" +
                result.nextChar +
                "„ÄçÔºÅ"
        );
    } catch (error) {
        console.log("err");
        console.error(error);
    }
});

app.start(3000);
